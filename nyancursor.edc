#ifndef __NYANCAT_CURSOR
#define __NYANCAT_CURSOR
#define FRAME_DURATION 0.07
collections {
	group { name: "nyanology/catcursor";
		alias: "terminology/cursor";
		images {
			image: "cat01.png" COMP;
			image: "cat02.png" COMP;
			image: "cat03.png" COMP;
			image: "cat04.png" COMP;
			image: "cat05.png" COMP;
			image: "cat06.png" COMP;
			image: "cat07.png" COMP;
			image: "cat08.png" COMP;
			image: "cat09.png" COMP;
			image: "cat10.png" COMP;
			image: "cat11.png" COMP;
			image: "cat12.png" COMP;
			image: "cr_key.png" COMP;
		}
	      sounds {
		 sample { name: "nya000" AS_IS; source: "nya000.wav"; }
		 sample { name: "nya001" AS_IS; source: "nya001.wav"; }
		 sample { name: "nya002" AS_IS; source: "nya002.wav"; }
		 sample { name: "nya003" AS_IS; source: "nya003.wav"; }
		 sample { name: "nya004" AS_IS; source: "nya004.wav"; }
		 sample { name: "nya005" AS_IS; source: "nya005.wav"; }
		 sample { name: "nya006" AS_IS; source: "nya006.wav"; }
		 sample { name: "nya007" AS_IS; source: "nya007.wav"; }
		 sample { name: "nya008" AS_IS; source: "nya008.wav"; }
		 sample { name: "nya009" AS_IS; source: "nya009.wav"; }
		 sample { name: "nya010" AS_IS; source: "nya010.wav"; }
		 sample { name: "nya011" AS_IS; source: "nya011.wav"; }
		 sample { name: "nya012" AS_IS; source: "nya012.wav"; }
		 sample { name: "nya013" AS_IS; source: "nya013.wav"; }
		 sample { name: "nya014" AS_IS; source: "nya014.wav"; }
		 sample { name: "nya015" AS_IS; source: "nya015.wav"; }
		 sample { name: "nya016" AS_IS; source: "nya016.wav"; }
		 sample { name: "nya017" AS_IS; source: "nya017.wav"; }
		 sample { name: "nya018" AS_IS; source: "nya018.wav"; }
		 sample { name: "nya019" AS_IS; source: "nya019.wav"; }
		 sample { name: "nya020" AS_IS; source: "nya020.wav"; }
		 sample { name: "nya021" AS_IS; source: "nya021.wav"; }
		 sample { name: "nya022" AS_IS; source: "nya022.wav"; }
		 sample { name: "nya023" AS_IS; source: "nya023.wav"; }
		 sample { name: "nya024" AS_IS; source: "nya024.wav"; }
		 sample { name: "nya025" AS_IS; source: "nya025.wav"; }
		 sample { name: "nya026" AS_IS; source: "nya026.wav"; }
		 sample { name: "nya027" AS_IS; source: "nya027.wav"; }
		 sample { name: "nya028" AS_IS; source: "nya028.wav"; }
		 sample { name: "nya029" AS_IS; source: "nya029.wav"; }
		 sample { name: "nya030" AS_IS; source: "nya030.wav"; }
		 sample { name: "nya031" AS_IS; source: "nya031.wav"; }
		 sample { name: "nya032" AS_IS; source: "nya032.wav"; }
		 sample { name: "nya033" AS_IS; source: "nya033.wav"; }
		 sample { name: "nya034" AS_IS; source: "nya034.wav"; }
		 sample { name: "nya035" AS_IS; source: "nya035.wav"; }
		 sample { name: "nya036" AS_IS; source: "nya036.wav"; }
		 sample { name: "nya037" AS_IS; source: "nya037.wav"; }
		 sample { name: "nya038" AS_IS; source: "nya038.wav"; }
		 sample { name: "nya039" AS_IS; source: "nya039.wav"; }
		 sample { name: "nya040" AS_IS; source: "nya040.wav"; }
		 sample { name: "nya041" AS_IS; source: "nya041.wav"; }
		 sample { name: "nya042" AS_IS; source: "nya042.wav"; }
		 sample { name: "nya043" AS_IS; source: "nya043.wav"; }
		 sample { name: "nya044" AS_IS; source: "nya044.wav"; }
		 sample { name: "nya045" AS_IS; source: "nya045.wav"; }
		 sample { name: "nya046" AS_IS; source: "nya046.wav"; }
		 sample { name: "nya047" AS_IS; source: "nya047.wav"; }
		 sample { name: "nya048" AS_IS; source: "nya048.wav"; }
		 sample { name: "nya049" AS_IS; source: "nya049.wav"; }
		 sample { name: "nya050" AS_IS; source: "nya050.wav"; }
		 sample { name: "nya051" AS_IS; source: "nya051.wav"; }
		 sample { name: "nya052" AS_IS; source: "nya052.wav"; }
		 sample { name: "nya053" AS_IS; source: "nya053.wav"; }
		 sample { name: "nya054" AS_IS; source: "nya054.wav"; }
		 sample { name: "nya055" AS_IS; source: "nya055.wav"; }
		 sample { name: "nya056" AS_IS; source: "nya056.wav"; }
		 sample { name: "nya057" AS_IS; source: "nya057.wav"; }
		 sample { name: "nya058" AS_IS; source: "nya058.wav"; }
		 sample { name: "nya059" AS_IS; source: "nya059.wav"; }
		 sample { name: "nya060" AS_IS; source: "nya060.wav"; }
		 sample { name: "nya061" AS_IS; source: "nya061.wav"; }
		 sample { name: "nya062" AS_IS; source: "nya062.wav"; }
		 sample { name: "nya063" AS_IS; source: "nya063.wav"; }
		 sample { name: "nya064" AS_IS; source: "nya064.wav"; }
		 sample { name: "nya065" AS_IS; source: "nya065.wav"; }
		 sample { name: "nya066" AS_IS; source: "nya066.wav"; }
		 sample { name: "nya067" AS_IS; source: "nya067.wav"; }
		 sample { name: "nya068" AS_IS; source: "nya068.wav"; }
		 sample { name: "nya069" AS_IS; source: "nya069.wav"; }
		 sample { name: "nya070" AS_IS; source: "nya070.wav"; }
		 sample { name: "nya071" AS_IS; source: "nya071.wav"; }
		 sample { name: "nya072" AS_IS; source: "nya072.wav"; }
		 sample { name: "nya073" AS_IS; source: "nya073.wav"; }
		 sample { name: "nya074" AS_IS; source: "nya074.wav"; }
		 sample { name: "nya075" AS_IS; source: "nya075.wav"; }
		 sample { name: "nya076" AS_IS; source: "nya076.wav"; }
		 sample { name: "nya077" AS_IS; source: "nya077.wav"; }
	      }
	      script {
		public nya_index, now_playing, atimer, play_queue;
		public playing_done(val) {
			new q = get_int(play_queue);
			new t = get_int(atimer);
			if (q > 0) {
				play_next();
				t = timer(0.35, "playing_done", 1); /* potential timer leak :-/ */
				set_int(atimer, t); /* leak is here */
				set_int(play_queue, q - 1);
			} else {
				if (t) {
					cancel_timer(t);
					set_int(atimer, 0);
				}
				set_int(now_playing, 0);
			}
		}
		public play_next() {
                  new buf[32];
		  new i = get_int(nya_index);
		  /* Route around incomplete snprintf, we want %03i */
		  if (i < 10)
			  snprintf(buf, 31, "nya00%i", i);
		  else if (i < 100)
			  snprintf(buf, 31, "nya0%i", i);
		  else
			  snprintf(buf, 31, "nya%i", i);
		  set_int(nya_index, (i + 1) %78);
		  play_sample(buf, 1.0);
		}
		}
		parts {
			part { name: "cat";
				description { state: "default" 0.0;
					min: 0 17;
					max: SOURCE;
					aspect: 2.4 2.6; // aspect from the source image
					aspect_preference: VERTICAL;
					rel1.relative: 4.5 0;
					image.normal: "cat01.png";
					map.on: 1;
				}
				description { state: "greyed";
					inherit: "default";
					color: 120 120 120 255;
				}
				description { state: "anim1" 0.0;
					inherit: "default";
					image {
						tween: "cat01.png";
						tween: "cat02.png";
						tween: "cat03.png";
						tween: "cat04.png";
						tween: "cat05.png";
						normal: "cat06.png";
					}
				}
				description { state: "anim2" 0.0;
					inherit: "default";
					image {
						tween: "cat07.png";
						tween: "cat08.png";
						tween: "cat09.png";
						tween: "cat10.png";
						tween: "cat11.png";
						normal: "cat12.png";
					}
				}
				description { state: "rotation1" 0.0;
					inherit: "default";
					image {
						tween: "cat01.png";
						tween: "cat02.png";
						normal: "cat03.png";
					}
					map.rotation.z: -35.0;
				}
				description { state: "rotation2" 0.0;
					inherit: "default";
					image {
						tween: "cat04.png";
						tween: "cat05.png";
						tween: "cat06.png";
						tween: "cat07.png";
						tween: "cat08.png";
						normal: "cat09.png";
					}
					map.rotation.z: 35.0;
				}
				description { state: "rotation3" 0.0;
					inherit: "default";
					image {
						tween: "cat10.png";
						tween: "cat11.png";
						normal: "cat12.png";
					}
					map.rotation.z: 0.0;
				}
			}

			part { name: "key";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "cat";
						offset: -5 -5;
						relative: 0.1 0.0;
					}
					rel2 {
						to: "cat";
						offset: 4 4;
						relative: 0.5 1.0;
					}
					image {
						normal: "cr_key.png";
						border: 4 4 4 4;
					}
					color: 255 255 255 0;
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
				description { state: "out" 0.0;
					inherit: "default" 0.0;
					color: 160 100 255 0;
					rel1.relative: -0.2 -0.18;
					rel2.relative: 0.6 1.18;
				}
			}

		}
		programs {
			program { name: "anim";
				signal: "focus,in";
				source: "terminology";
				action: STATE_SET "anim1" 0.0;
				transition: LINEAR FRAME_DURATION*6;
				target: "cat";
				after: "loop";
			}
			program { name: "loop";
				action: STATE_SET "anim2" 0.0;
				transition: LINEAR FRAME_DURATION*6;
				target: "cat";
				after: "anim";
			}
			program { name: "stop_anim";
				signal: "focus,out";
				source: "terminology";
				action: ACTION_STOP;
				target: "anim";
				target: "loop";
				target: "bellrotate1";
				target: "bellrotate2";
				target: "bellrotate3";
				after: "stop_anim2";
			}
			// Is it that important to go back to default state ?
			program { name: "stop_anim2";
				action: STATE_SET "greyed" 0.0;
				transition: LINEAR FRAME_DURATION*6;
				target: "cat";
			}
            program {
               signal: "key,down"; source: "terminology";
               script {
		if (get_int(now_playing) == 0) {
			new tim;
			play_next()
			set_int(now_playing, 1);
			tim = timer(0.35, "playing_done", 1);
			set_int(atimer, tim);
		} else {
			/* no mutex yolo */
			set_int(play_queue, get_int(play_queue) + 1);
		}
               }
            }
			program { name: "key";
				signal: "key,down";
				source: "terminology";
				action: STATE_SET "default" 0.0;
				target: "key";
				after: "key2";
			}
			program { name: "key2";
				action: STATE_SET "on" 0.0;
				target: "key";
				after: "key3";
			}
			program { name: "key3";
				action: STATE_SET "out" 0.0;
				transition: DECELERATE 0.3;
				target: "key";
			}
			program { name: "bellrotate1";
				signal: "bell";
				source: "terminology";
				action: STATE_SET "rotation1" 0.0;
				transition: LINEAR 0.12;
				target: "cat";
				after: "bellrotate2";
			}
			program { name: "bellrotate2";
				action: STATE_SET "rotation2" 0.0;
				transition: LINEAR 0.24;
				target: "cat";
				after: "bellrotate3";
			}
			program { name: "bellrotate3";
				action: STATE_SET "rotation3" 0.0;
				transition: LINEAR 0.12;
				target: "cat";
				after: "anim";
			}
		}
	}
}
#endif /*__NYANCAT_CURSOR*/
